name: Solar System Workflow

on: 
  push:
    branches:
      - main
      - 'feature/*'

env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}     

jobs:
  unit-testing:
     strategy:
       matrix: 
         node-version: [18, 19, 20]
         os: [ubuntu-latest]
       
     runs-on: ${{ matrix.os }}
     steps:
       - name: checkout repo
         uses: actions/checkout@v4
       
       - name: install NodeJs - ${{ matrix.node-version}}
         uses:  actions/setup-node@v3
         with:
            node-version: ${{ matrix.node-version}}

       - name: cache NPM dependencies
         uses: actions/cache@v3
         with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json')}}
       
       - name: Install dependencies
         run: npm install

       - name: test cases
         id: unit-test-case
         run: npm test

       - name: upload test filess
         #if: failure() && (steps.unit-test-case.outcome == 'failure' || steps.unit-test-case.outcome == 'success')
         if: always()
         uses: actions/upload-artifact@v4
         with:
           name: test-files
           path: test-results.xml
           overwrite: true
      

  Code-Coverage:
     runs-on: ubuntu-latest
     steps:
       - name: checkout repo
         uses: actions/checkout@v4
       
       - name: install NodeJs
         uses:  actions/setup-node@v3
         with:
            node-version: 18

       - name: cache NPM dependencies
         uses: actions/cache@v3
         with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json')}}
       
       - name: Install dependencies
         run: npm install

       - name: code coverage
         continue-on-error: true
         run: npm run coverage

       - name: upload code coverage report
         uses: actions/upload-artifact@v4
         with:
           name: coverage test results
           path: coverage
           retension-days: 5

  docker-login:
     needs: [unit-testing,Code-Coverage]
     runs-on: ubuntu-latest
     steps:
     - name: checkout repo
       uses: actions/checkout@v4
     
     - name: dockerhub-login
       uses: docker/login-action@v2.2.0
       with:
         username: ${{ vars.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_PASSWORD }}
         
